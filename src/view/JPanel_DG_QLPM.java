/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.PhieuMuonDAO;
import entities.DocGia;
import java.util.List;
import javax.swing.table.DefaultTableModel;
import model.Cache_DG;

/**
 *
 * @author abc
 */
public class JPanel_DG_QLPM extends javax.swing.JPanel {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form JPanel_DG_QLPM
     */
    public JPanel_DG_QLPM() {
        initComponents();
        this.onload();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        spnData = new javax.swing.JScrollPane();
        tblData = new javax.swing.JTable();

        setAutoscrolls(true);

        spnData.setAutoscrolls(true);

        tblData.setAutoCreateRowSorter(true);
        tblData.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "MÃ SÁCH", "TÊN SÁCH", "SL", "NHÂN VIÊN TRỰC", "SDT NHÂN VIÊN", "NGÀY MƯỢN", "NGÀY TRẢ", "GHI CHÚ"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblData.setToolTipText("Thông tin sách");
        spnData.setViewportView(tblData);
        if (tblData.getColumnModel().getColumnCount() > 0) {
            tblData.getColumnModel().getColumn(0).setMinWidth(65);
            tblData.getColumnModel().getColumn(0).setMaxWidth(80);
            tblData.getColumnModel().getColumn(1).setMinWidth(250);
            tblData.getColumnModel().getColumn(2).setMinWidth(50);
            tblData.getColumnModel().getColumn(2).setMaxWidth(80);
            tblData.getColumnModel().getColumn(3).setMinWidth(200);
            tblData.getColumnModel().getColumn(4).setMinWidth(120);
            tblData.getColumnModel().getColumn(5).setMinWidth(120);
            tblData.getColumnModel().getColumn(6).setMinWidth(120);
            tblData.getColumnModel().getColumn(7).setMinWidth(180);
        }

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spnData, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spnData, javax.swing.GroupLayout.DEFAULT_SIZE, 500, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane spnData;
    private javax.swing.JTable tblData;
    // End of variables declaration//GEN-END:variables

    protected PhieuMuonDAO dao = new PhieuMuonDAO();
    protected DefaultTableModel model = null;
    protected List<Object[]> list = null;

    private void onload() {
        String sql = dao.getCustomSQL(1);
        if (Cache_DG.isLogin()) {
            DocGia dg = Cache_DG.getDg();
            list = dao.SelectBySql(sql, dg.getDgID());
            // Lấy dữ liệu hiển thị
            this.fillTable();
        } else {
            System.out.println("Doc gia is null!");
        }
    }

    private void fillTable() {
        this.model = (DefaultTableModel) this.tblData.getModel();
        model.setRowCount(0);
        list.forEach((x) -> model.addRow(x));
    }

    protected int getSoSach() {
        int sum = 0;
        sum = list.stream().map((x) -> Integer.parseInt(x[2].toString())).reduce(sum, Integer::sum);
        return sum;
    }
}
