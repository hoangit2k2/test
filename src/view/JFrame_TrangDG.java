/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.KhoSachDAO;
import dao.LoaiSachDAO;
import entities.DocGia;
import entities.KhoSach;
import entities.LoaiSach;
import java.awt.Dimension;
import java.util.List;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import model.Cache_DG;
import model.ImgTSX;

public final class JFrame_TrangDG extends javax.swing.JFrame implements InterfaceForm<KhoSach> {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form JFrame_DocGia
     */
    public JFrame_TrangDG() {
        initComponents();
        this.loadData();
         this.setLocation(550, 270);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tbdpane = new javax.swing.JTabbedPane();
        pnlTable = new javax.swing.JPanel();
        pnlTTSach = new javax.swing.JPanel();
        lblAnh = new javax.swing.JLabel();
        spr1 = new javax.swing.JSeparator();
        lblTenSach = new javax.swing.JLabel();
        lblTacGia = new javax.swing.JLabel();
        txtTenSach = new javax.swing.JTextField();
        txtTacGia = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        spnLoai = new javax.swing.JScrollPane();
        tblLoaiSach = new javax.swing.JTable();
        spnKho = new javax.swing.JScrollPane();
        tblKhoSach = new javax.swing.JTable();
        txtSearch = new javax.swing.JTextField();
        txtColsSelected = new javax.swing.JTextField();
        lblheading = new javax.swing.JLabel();
        lblReader = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        pnlTTSach.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        lblAnh.setFont(new java.awt.Font("Times New Roman", 2, 12)); // NOI18N
        lblAnh.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblAnh.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        lblAnh.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        lblAnh.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);

        spr1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        lblTenSach.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTenSach.setText("Tên sách:");

        lblTacGia.setFont(new java.awt.Font("Times New Roman", 1, 12)); // NOI18N
        lblTacGia.setText("Tác giả:");

        javax.swing.GroupLayout pnlTTSachLayout = new javax.swing.GroupLayout(pnlTTSach);
        pnlTTSach.setLayout(pnlTTSachLayout);
        pnlTTSachLayout.setHorizontalGroup(
            pnlTTSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTTSachLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblAnh, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(spr1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTTSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtTacGia, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(lblTenSach)
                    .addComponent(lblTacGia)
                    .addComponent(txtTenSach, javax.swing.GroupLayout.DEFAULT_SIZE, 160, Short.MAX_VALUE)
                    .addComponent(jSeparator1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlTTSachLayout.setVerticalGroup(
            pnlTTSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(spr1)
            .addGroup(pnlTTSachLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTTSachLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblAnh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(pnlTTSachLayout.createSequentialGroup()
                        .addComponent(lblTenSach)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTenSach, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblTacGia)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTacGia, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 57, Short.MAX_VALUE)))
                .addContainerGap())
        );

        tblLoaiSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblLoaiSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "LoaiID", "Tên loại sách", "Tủ số"
            }
        ));
        tblLoaiSach.setToolTipText("Loại sách");
        tblLoaiSach.setName("LoaiSach"); // NOI18N
        tblLoaiSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblLoaiSachMouseClicked(evt);
            }
        });
        tblLoaiSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblLoaiSachKeyReleased(evt);
            }
        });
        spnLoai.setViewportView(tblLoaiSach);
        if (tblLoaiSach.getColumnModel().getColumnCount() > 0) {
            tblLoaiSach.getColumnModel().getColumn(0).setMaxWidth(80);
            tblLoaiSach.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        tblKhoSach.setFont(new java.awt.Font("Times New Roman", 0, 14)); // NOI18N
        tblKhoSach.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "STT", "SachID", "TÊN SÁCH", "NHÀ XUẤT BẢN", "TÁC GIẢ", "SỐ LƯỢNG", "ĐƠN GIÁ", "KỆ SỐ"
            }
        ));
        tblKhoSach.setToolTipText("Thông tin sách");
        tblKhoSach.setName("KhoSach"); // NOI18N
        tblKhoSach.setRowHeight(20);
        tblKhoSach.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblKhoSachMouseClicked(evt);
            }
        });
        tblKhoSach.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                tblKhoSachKeyReleased(evt);
            }
        });
        spnKho.setViewportView(tblKhoSach);
        if (tblKhoSach.getColumnModel().getColumnCount() > 0) {
            tblKhoSach.getColumnModel().getColumn(0).setMaxWidth(50);
            tblKhoSach.getColumnModel().getColumn(1).setMaxWidth(100);
            tblKhoSach.getColumnModel().getColumn(2).setMinWidth(250);
            tblKhoSach.getColumnModel().getColumn(5).setMaxWidth(80);
            tblKhoSach.getColumnModel().getColumn(6).setMaxWidth(80);
            tblKhoSach.getColumnModel().getColumn(7).setMaxWidth(80);
        }

        txtSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSearchKeyReleased(evt);
            }
        });

        txtColsSelected.setText("Selected: ALL");

        javax.swing.GroupLayout pnlTableLayout = new javax.swing.GroupLayout(pnlTable);
        pnlTable.setLayout(pnlTableLayout);
        pnlTableLayout.setHorizontalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(spnLoai, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(pnlTTSach, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spnKho, javax.swing.GroupLayout.DEFAULT_SIZE, 576, Short.MAX_VALUE)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(txtColsSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 250, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSearch)))
                .addContainerGap())
        );
        pnlTableLayout.setVerticalGroup(
            pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTableLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addComponent(pnlTTSach, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spnLoai, javax.swing.GroupLayout.DEFAULT_SIZE, 317, Short.MAX_VALUE))
                    .addGroup(pnlTableLayout.createSequentialGroup()
                        .addGroup(pnlTableLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtColsSelected, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(spnKho, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
        );

        pnlTableLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {txtColsSelected, txtSearch});

        tbdpane.addTab("Xem kho sách", pnlTable);

        lblheading.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        lblheading.setText("THƯ VIỆN SÁCH");

        lblReader.setFont(new java.awt.Font("Times New Roman", 3, 14)); // NOI18N
        lblReader.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        lblReader.setText("Dg0000 - Nguyễn Văn Tên");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(tbdpane)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblheading, javax.swing.GroupLayout.PREFERRED_SIZE, 459, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(lblReader, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(75, 75, 75)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(lblheading, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(lblReader, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tbdpane))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblLoaiSachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblLoaiSachKeyReleased
        int k = evt.getKeyCode();
        if (k == 33 || k == 34 || k == 38 || k == 40) {
            this.setKhoLoaiSach();
        }
    }//GEN-LAST:event_tblLoaiSachKeyReleased

    private void tblLoaiSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblLoaiSachMouseClicked
        this.setKhoLoaiSach();
    }//GEN-LAST:event_tblLoaiSachMouseClicked

    private void tblKhoSachMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblKhoSachMouseClicked
        this.colSelected(tblKhoSach, txtColsSelected);
        this.tblKSachClick();
    }//GEN-LAST:event_tblKhoSachMouseClicked

    private void tblKhoSachKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_tblKhoSachKeyReleased
        this.colSelected(tblKhoSach, txtColsSelected);
        int k = evt.getKeyCode();
        if (k == 33 || k == 34 || k == 38 || k == 40) {
            this.tblKSachClick();
        }
    }//GEN-LAST:event_tblKhoSachKeyReleased

    private void txtSearchKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSearchKeyReleased
        if (evt.getKeyCode() == 10) {
            this.setKhoLoaiSach();
        }
    }//GEN-LAST:event_txtSearchKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrame_TrangDG.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new JFrame_TrangDG().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel lblAnh;
    private javax.swing.JLabel lblReader;
    private javax.swing.JLabel lblTacGia;
    private javax.swing.JLabel lblTenSach;
    private javax.swing.JLabel lblheading;
    private javax.swing.JPanel pnlTTSach;
    private javax.swing.JPanel pnlTable;
    private javax.swing.JScrollPane spnKho;
    private javax.swing.JScrollPane spnLoai;
    private javax.swing.JSeparator spr1;
    private javax.swing.JTabbedPane tbdpane;
    private javax.swing.JTable tblKhoSach;
    private javax.swing.JTable tblLoaiSach;
    private javax.swing.JTextField txtColsSelected;
    private javax.swing.JTextField txtSearch;
    private javax.swing.JTextField txtTacGia;
    private javax.swing.JTextField txtTenSach;
    // End of variables declaration//GEN-END:variables

    // __________________________________________________________________DATA
    private JPanel panel = null;
    private final ImgTSX img = new ImgTSX(lblAnh,
            "src/icons/book.png", "images/Sach/");
    private DefaultTableModel model = null;
    private List<KhoSach> list = null;
    private KhoSachDAO dao = null;

    // __________________________________________________________________PANE_1
    private void loadData() {
        //Thay đổi thông tin form
        this.tblKhoSach.setColumnSelectionAllowed(true);
        this.tblKhoSach.setAutoCreateRowSorter(true);
        this.setLocationRelativeTo(null);

        // Dữ liệu bảng loại sách
        this.model = (DefaultTableModel) this.tblLoaiSach.getModel();
        List<LoaiSach> LoaiSach = new LoaiSachDAO().SelectAllElement();
        String[] first = {"ALL", "Chọn tất cả loại sách", "all"};
        // đổ thông tin bảng loại sách
        model.addRow(first);
        LoaiSach.forEach((x) -> {
            Object[] row = {x.getLoaiID(), x.getTenLoai(), x.getTuSo()};
            model.addRow(row);
        });
        // _______________________________________ TẢI DỮ LIỆU PANE


        // dữ liệu bảng sách
        dao = new KhoSachDAO();
        this.list = dao.SelectAllElement();
        // đổ thông tin bảng sách
        this.tblLoaiSach.setRowSelectionInterval(0, 0);
        this.fillTable();
    }

    @Override
    public void Insert() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void update() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void delete() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public int findList(Object key) {
        String findBy = (String) key;
        for (int i = 0; i < list.size(); i++) {
            if (findBy.equalsIgnoreCase(list.get(i).getSachID())) {
                return i;
            }
        }
        return -1;
    }

    @Override
    public KhoSach getForm() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @Override
    public void setForm(KhoSach data) {
        ImgTSX.width = 150;
        ImgTSX.height = 150;
        img.setFile(data.getHinh(), lblAnh);
        this.txtTenSach.setText(data.getTenSach());
        this.txtTacGia.setText(data.getTacGia());
    }

    @Override
    public void clearForm() {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    public void fillTable() {
        this.model = (DefaultTableModel) this.tblKhoSach.getModel();
        this.model.setRowCount(0);

        for (int i = 0; i < list.size();) {
            KhoSach x = list.get(i);
            Object[] row = {++i, x.getSachID(), x.getTenSach(), x.getNhaxb(),
                x.getTacGia(), x.getSoLuong(), x.getDonGia(), x.getKeSo()
            };
            model.addRow(row);
        }
    }

    @Override
    public boolean validateData(KhoSach data) {
        throw new UnsupportedOperationException("Not supported yet.");
    }

    @SuppressWarnings({"deprecation", "deprecation"})
    private void setKhoLoaiSach() {
        // Mặc định tìm theo cột TÊN SÁCH
        if (tblKhoSach.getSelectedColumns().length < 1) {
            int colSelected = findColumnName(tblKhoSach, "TÊN SÁCH");
            tblKhoSach.setColumnSelectionInterval(colSelected, colSelected);
            this.colSelected(tblKhoSach, txtColsSelected);
        }

        // Tạo câu truy vấn
        String colLoaiID = this.tblLoaiSach.getValueAt(
                this.tblLoaiSach.getSelectedRow(),
                this.findColumnName(tblLoaiSach, "LoaiID")
        ).toString();
        String sql, search = txtSearch.getText();
        if (search.length() > 1) {
            search = search.substring(0, search.length() - 2);
        }

        // Sứ lý điều kiện
        if (!colLoaiID.equalsIgnoreCase("all")) {
            sql = this.createSqlFindLike(tblKhoSach, search);
            sql += (sql.lastIndexOf("where") > 0
                    ? "and LoaiID = ? "
                    : " where LoaiID = ?");
            this.list = dao.SelectBySqlElement(sql, colLoaiID); // truy vấn
        } else {
            // All mặc định tìm tên sách
            sql = this.createSqlFindLike(tblKhoSach, search);
            this.list = dao.SelectBySqlElement(sql); // truy vấn "LoaiID = 'All'"
        }

        // Đổ dữ liệu bảng theo loại
        this.fillTable();
    }

    // __________________________________________________________________PANE_2
   

    private void tblKSachClick() {
        int row = this.tblKhoSach.getSelectedRow();
        int col = this.findColumnName(this.tblKhoSach, "SachID");
        String value = this.tblKhoSach.getValueAt(row, col).toString();
        int locatedRow = this.findList(value);
        this.setForm(list.get(locatedRow));
    }
}
